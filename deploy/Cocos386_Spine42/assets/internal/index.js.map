{"version":3,"sources":["../file:/Applications/Cocos/Creator/3.8.6/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.6/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts"],"names":["ccclass","_decorator","property","DebugViewRuntimeControl","_dec","_dec2","Node","_dec3","_dec4","_class","_class2","_Component","_inheritsLoose","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_descriptor2","_descriptor3","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","_proto","prototype","start","canvas","node","parent","getComponent","Canvas","console","error","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","toggleComponent","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","activeValue","active","onLoad","update","deltaTime","Component","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","_RF","pop"],"mappings":"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","file":"all.js","sourcesContent":["import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n"]}