{"version":3,"sources":["../../file:/Applications/Cocos/Creator/3.7.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.7.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../../file:/Users/fe-bao/TestSpineV373/assets/file:/Users/fe-bao/TestSpineV373/assets/DragNode.ts","../../file:/Users/fe-bao/TestSpineV373/assets/file:/Users/fe-bao/TestSpineV373/assets/Moving.ts","../../file:/Users/fe-bao/TestSpineV373/assets/file:/Users/fe-bao/TestSpineV373/assets/ScaleNode.ts","../../file:/Users/fe-bao/TestSpineV373/assets/file:/Users/fe-bao/TestSpineV373/assets/SpineController.ts","../../file:/Users/fe-bao/TestSpineV373/assets/file:/Users/fe-bao/TestSpineV373/assets/SpineTest.ts","../../file:/Users/fe-bao/TestSpineV373/assets/file:/Users/fe-bao/TestSpineV373/assets/TimeScaleSlider.ts"],"names":["ccclass","_decorator","property","DebugViewRuntimeControl","_dec","_dec2","Node","_dec3","_dec4","_class","_class2","_Component","_inheritsLoose","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_descriptor2","_descriptor3","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","_proto","prototype","start","canvas","node","parent","getComponent","Canvas","console","error","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","toggleComponent","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","activeValue","active","onLoad","update","deltaTime","Component","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","_RF","pop","DragNode","_isDragging","_offset","v3","targetNode","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","event","touch","set","getUILocation","position","Moving","_tween","_speed","onEnable","scheduleOnce","move","onDisable","unscheduleAllCallbacks","stop","spine","sp","Skeleton","clearAnimation","_this2","randomPosition","Vec3","Math","random","duration","distance","tween","to","onUpdate","direction","clone","subtract","normalize","angle","atan2","PI","onComplete","MIN_SCALE","MAX_SCALE","ScaleNode","Slider","slider","progress","isValid","target","value","snapValue","label","toFixed","scale","snap","round","SpineController","Prefab","_dec5","_dec6","_descriptor4","_descriptor5","setEventListener","onSpineEvent","bind","window","assetManager","resources","loadDir","err","assets","warn","filter","data","SkeletonData","createListSpines","skeData","_this3","containerSpine","removeAllChildren","_loop","_step","btn","btnPlayAnim","skeletonData","createListAnims","_iterator","_createForOfIteratorHelperLoose","done","_this4","container","anims","getAnimsEnum","_loop2","anim","setAnimation","toggleLoop","getAnimationDuration","log","_ret","animation","_skeletonCache","animations","find","e","trackEntry","clearTracks","SpineTest","EditBox","pool","NodePool","listSpine","spineBoss","delayTime","editBox","enabled","editBoxIncreaseByTime","editBoxMax","loadListSpine","dt","addByNumber","parseInt","lblCount","VERSION","includes","add","count","children","MaxSpineCount","get","prefab","setParent","spineData","tryPlayAnimation","remove","put","hasAnimation","_i","_anims","_createClass","key","TimeScaleSlider","_ScaleNode","timeScale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,UAAQA,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaC,uBAAuB,uCAAAC,IAAA,GADnCJ,OAAO,CAAC,kCAAD,CAC4BI,EADQC,KAAA,GAEvCH,QAAQ,CAACI,IAAD,CADuBF,EACjBG,KAAA,GAEdL,QAAQ,CAACI,IAAD,CAHuBF,EAGjBI,KAAA,GAEdN,QAAQ,CAACI,IAAD,CALuBF,EAKjBA,IAAA,CAAAK,MAAA,IAAAC,OAAA,0BAAAC;AAAAC,QAAAA,cAAA,CAAAT,uBAAA,EAAAQ,UAAA,CAAAC;;AAAA,iBAAAT,uBAAA;AAAA,cAAAU,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAAF,UAAA,CAAAS,IAAAT,CAAAU,KAAAV,CAAAA,UAAAA,SAAAW,OAAAL,KAAAN,SAAAE;;AAAAU,UAAAA,0BAAA,CAAAV,KAAA,uBAAA,EAAAW,WAAA,EAAAC,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,oBAAA,EAAAa,YAAA,EAAAD,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,gCAAA,EAAAc,YAAA,EAAAF,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAV,UAAAA,KAAA,CAElBe,OAFkBf,GAEA,CAFAA;AAECA,UAAAA,KAAA,CAERgB,SAFQhB,GAEc,CAC1B,iBAD0B,EAE1B,cAF0B,EAG1B,eAH0B,EAI1B,gBAJ0B,EAK1B,gBAL0B,EAM1B,eAN0B,EAO1B,WAP0B,EAQ1B,KAR0B,EAS1B,KAT0B,EAU1B,aAV0B,EAW1B,eAX0B,EAY1B,cAZ0B,EAc1B,iBAd0B,EAe1B,kBAf0B,EAgB1B,mBAhB0B,EAiB1B,YAjB0B,EAkB1B,eAlB0B,EAmB1B,gBAnB0B,EAoB1B,cApB0B,EAqB1B,UArB0B,EAsB1B,WAtB0B,EAuB1B,oBAvB0B,EAwB1B,KAxB0B,EA0B1B,gBA1B0B,EA2B1B,iBA3B0B,EA4B1B,YA5B0B,EA6B1B,aA7B0B,EA8B1B,cA9B0B,EA+B1B,SA/B0B,EAgC1B,UAhC0B,EAiC1B,WAjC0B,EAkC1B,QAlC0B,EAmC1B,IAnC0B,EAqC1B,SArC0B,EAsC1B,yBAtC0B,EAuC1B,0BAvC0B,EAwC1B,sBAxC0B,EAyC1B,uBAzC0B,EA0C1B,cA1C0B,EA2C1B,0BA3C0B,EA4C1B,uBA5C0B,EA6C1B,cA7C0B,EA+C1B,KA/C0B,CAFdA;AAkDfA,UAAAA,KAAA,CACOiB,YADPjB,GACgC,CAC7B,gBAD6B,EAE7B,iBAF6B,EAG7B,aAH6B,EAI7B,cAJ6B,EAK7B,UAL6B,EAM7B,WAN6B,EAO7B,QAP6B,EAQ7B,IAR6B,EAU7B,YAV6B,EAW7B,KAX6B,EAa7B,cAb6B,EAc7B,kBAd6B,EAgB7B,SAhB6B,EAiB7B,kBAjB6B,EAkB7B,mBAlB6B,EAmB7B,mBAnB6B,EAoB7B,IApB6B,CADhCA;AAsBAA,UAAAA,KAAA,CACOkB,OADPlB,GAC2B,CACxB,sBADwB,EAExB,sBAFwB,CAD3BA;AAIAA,UAAAA,KAAA,CAEOmB,uBAFPnB,GAEyC,EAFzCA;AAE2CA,UAAAA,KAAA,CACpCoB,oBADoCpB,GACL,EADKA;AACHA,UAAAA,KAAA,CACjCqB,kBADiCrB,GACJ,EADIA;AACFA,UAAAA,KAAA,CAC/BsB,iBAD+BtB,GACC,EADDA;AACGA,UAAAA,KAAA,CAClCuB,kBADkCvB,GACJ,EADIA;AACFA,UAAAA,KAAA,CAChCwB,eADgCxB,GACJ,EADIA;AACFA,UAAAA,KAAA,CAC9ByB,eAD8BzB,SAAAA;AACfA,UAAAA,KAAA,CA8Lf0B,kBA9Le1B,GA8LM,CA9LNA;AA8LOA,UAAAA,KAAA,CACtB2B,QADsB3B,GACD,CACzB,iBADyB,EAEzB,iBAFyB,EAGzB,iBAHyB,EAIzB,iBAJyB,EAKzB,iBALyB,CADCA;AAO7BA,UAAAA,KAAA,CACO4B,KADP5B,GACwB,CACrB6B,KAAK,CAACC,KADe,EAErBD,KAAK,CAACE,KAFe,EAGrBF,KAAK,CAACG,GAHe,EAIrBH,KAAK,CAACI,KAJe,EAKrBJ,KAAK,CAACK,IALe,CADxBlC;AAOA,iBAAAA,KAAA;;;AAAA,YAAAmC,MAAA,GAAA7C,uBAAA,CAAA8C,SAAA;;AAAAD,QAAAA,MAAA,CA3MDE,KA2MCF,GA3MD,SAAAE,KAAA,GAAQ;;AAEJ,cAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,YAAjB,CAA8BC,MAA9B,CAAf;;AACA,cAAI,CAACJ,MAAL,EAAa;AACTK,YAAAA,OAAO,CAACC,KAARD,CAAc,sDAAdA;AACA;;;AAGJ,cAAME,WAAW,GAAG,KAAKN,IAAL,CAAUC,MAAV,CAAiBC,YAAjB,CAA8BK,WAA9B,CAApB;AACA,cAAMC,eAAe,GAAGF,WAAW,CAACG,KAAZH,GAAoB,GAA5C;AACA,cAAMI,gBAAgB,GAAGJ,WAAW,CAACK,MAAZL,GAAqB,GAA9C;AAEA,cAAIM,CAAC,GAAG,CAACJ,eAAD,GAAmBA,eAAe,GAAG,GAA7C;AAAA,cAAkDK,CAAC,GAAGH,gBAAgB,GAAGA,gBAAgB,GAAG,GAA5F;AACA,cAAMD,KAAK,GAAG,GAAd;AAAA,cAAmBE,MAAM,GAAG,EAA5B,CAbI;;AAgBJ,cAAMG,QAAQ,GAAG,KAAKd,IAAL,CAAUe,cAAV,CAAyB,UAAzB,CAAjB;AACA,cAAMC,UAAU,GAAGC,WAAW,CAACH,QAAD,CAA9B;AACAE,UAAAA,UAAU,CAACf,MAAXe,GAAoB,KAAKhB,IAAzBgB;AACAA,UAAAA,UAAU,CAACE,IAAXF,GAAkB,SAAlBA;AACA,cAAMG,SAAS,GAAGF,WAAW,CAACH,QAAD,CAA7B;AACAK,UAAAA,SAAS,CAAClB,MAAVkB,GAAmB,KAAKnB,IAAxBmB;AACAA,UAAAA,SAAS,CAACD,IAAVC,GAAiB,QAAjBA,CAtBI;;AAyBJ,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,gBAAMC,QAAQ,GAAGJ,WAAW,CAAC,KAAKK,4BAAL,CAAkCP,cAAlC,CAAiD,OAAjD,CAAD,CAA5B;AACAM,YAAAA,QAAQ,CAACE,WAATF,CAAqBT,CAAC,IAAIQ,CAAC,GAAG,CAAJA,GAAQ,KAAKX,KAAK,GAAG,CAArBW,GAAyB,GAA7B,CAAtBC,EAAyDR,CAAzDQ,EAA4D,GAA5DA;AACAA,YAAAA,QAAQ,CAACG,QAATH,CAAkB,IAAlBA,EAAwB,IAAxBA,EAA8B,IAA9BA;AACAA,YAAAA,QAAQ,CAACpB,MAAToB,GAAkBF,SAAlBE;;AACA,gBAAMI,eAAc,GAAGJ,QAAQ,CAACnB,YAATmB,CAAsBK,KAAtBL,CAAvB;;AACAI,YAAAA,eAAc,CAACE,MAAfF,GAAwBL,CAAC,GAAG,oCAAH,GAA0C,iCAAnEK;AACAA,YAAAA,eAAc,CAACpC,KAAfoC,GAAuBnC,KAAK,CAACC,KAA7BkC;AACAA,YAAAA,eAAc,CAACG,QAAfH,GAA0B,CAA1BA;AACA,iBAAKzC,kBAAL,CAAwB,KAAKA,kBAAL,CAAwBpB,MAAhD,IAA0D6D,eAA1D;;;AAGJZ,UAAAA,CAAC,IAAIF,MAALE,CArCI;;AAuCJ,cAAIgB,UAAU,GAAG,CAAjB;;AACA,eAAK,IAAIT,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAK3C,SAAL,CAAeb,MAAnC,EAA2CwD,EAAC,IAAIS,UAAU,EAA1D,EAA8D;AAC1D,gBAAIT,EAAC,KAAK,KAAK3C,SAAL,CAAeb,MAAf,IAAyB,CAAnC,EAAsC;AAClCgD,cAAAA,CAAC,IAAIH,KAALG;AACAiB,cAAAA,UAAU,GAAG,CAAbA;;;AAEJ,gBAAMC,OAAO,GAAGV,EAAC,GAAGH,WAAW,CAAC,KAAKc,gBAAN,CAAd,GAAwC,KAAKA,gBAA9D;AACAD,YAAAA,OAAO,CAACP,WAARO,CAAoBlB,CAApBkB,EAAuBjB,CAAC,GAAGF,MAAM,GAAGkB,UAApCC,EAAgD,GAAhDA;AACAA,YAAAA,OAAO,CAACN,QAARM,CAAiB,GAAjBA,EAAsB,GAAtBA,EAA2B,GAA3BA;AACAA,YAAAA,OAAO,CAAC7B,MAAR6B,GAAiB,KAAKC,gBAAL,CAAsB9B,MAAvC6B;AAEA,gBAAME,aAAa,GAAGF,OAAO,CAACG,sBAARH,CAA+BI,QAA/BJ,CAAtB;AACAE,YAAAA,aAAa,CAACL,MAAdK,GAAuB,KAAKvD,SAAL,CAAe2C,EAAf,CAAvBY;AACA,iBAAKjD,iBAAL,CAAuB,KAAKA,iBAAL,CAAuBnB,MAA9C,IAAwDoE,aAAxD;AACA,iBAAK/C,eAAL,CAAqB,KAAKA,eAAL,CAAqBrB,MAA1C,IAAoDoE,aAAa,CAACL,MAAlE;AAEAG,YAAAA,OAAO,CAACK,EAARL,CAAWM,MAAM,CAACC,SAAPD,CAAiBE,MAA5BR,EAAoC,KAAKS,gBAAzCT,EAA2D,IAA3DA;AAEA,iBAAKjD,oBAAL,CAA0BuC,EAA1B,IAA+BU,OAA/B;;;AAGJlB,UAAAA,CAAC,IAAIH,KAALG,CA5DI;;AA8DJ,eAAKU,4BAAL,CAAkCC,WAAlC,CAA8CX,CAAC,GAAG,EAAlD,EAAsDC,CAAtD,EAAyD,GAAzD;AACA,eAAKS,4BAAL,CAAkCE,QAAlC,CAA2C,GAA3C,EAAgD,GAAhD,EAAqD,GAArD;AACA,eAAKF,4BAAL,CAAkCa,EAAlC,CAAqCK,MAAM,CAACH,SAAPG,CAAiBC,KAAtD,EAA6D,KAAKC,sBAAlE,EAA0F,IAA1F;AACA,eAAKpB,4BAAL,CAAkCrB,MAAlC,GAA2Ce,UAA3C;AACA,cAAIS,cAAc,GAAG,KAAKH,4BAAL,CAAkCW,sBAAlC,CAAyDP,KAAzD,CAArB;AACA,eAAK1C,kBAAL,CAAwB,KAAKA,kBAAL,CAAwBpB,MAAhD,IAA0D6D,cAA1D;AAEA,cAAMkB,iBAAiB,GAAG1B,WAAW,CAAC,KAAKK,4BAAN,CAArC;AACAqB,UAAAA,iBAAiB,CAACpB,WAAlBoB,CAA8B/B,CAAC,GAAG,EAAlC+B,EAAsC9B,CAAtC8B,EAAyC,GAAzCA;AACAA,UAAAA,iBAAiB,CAACnB,QAAlBmB,CAA2B,GAA3BA,EAAgC,GAAhCA,EAAqC,GAArCA;AACAA,UAAAA,iBAAiB,CAACR,EAAlBQ,CAAqBH,MAAM,CAACH,SAAPG,CAAiBC,KAAtCE,EAA6C,KAAKC,eAAlDD,EAAmE,IAAnEA;AACAA,UAAAA,iBAAiB,CAAC1C,MAAlB0C,GAA2B3B,UAA3B2B;AACAlB,UAAAA,cAAc,GAAGkB,iBAAiB,CAACV,sBAAlBU,CAAyCjB,KAAzCiB,CAAjBlB;AACAA,UAAAA,cAAc,CAACE,MAAfF,GAAwB,WAAxBA;AACA,eAAKzC,kBAAL,CAAwB,KAAKA,kBAAL,CAAwBpB,MAAhD,IAA0D6D,cAA1D;AAEA,cAAMoB,UAAU,GAAG5B,WAAW,CAAC,KAAKK,4BAAN,CAA9B;AACAuB,UAAAA,UAAU,CAACtB,WAAXsB,CAAuBjC,CAAC,GAAG,GAA3BiC,EAAgChC,CAAhCgC,EAAmC,GAAnCA;AACAA,UAAAA,UAAU,CAACrB,QAAXqB,CAAoB,GAApBA,EAAyB,GAAzBA,EAA8B,GAA9BA;AACAA,UAAAA,UAAU,CAACV,EAAXU,CAAcL,MAAM,CAACH,SAAPG,CAAiBC,KAA/BI,EAAsC,KAAKC,MAA3CD,EAAmD,IAAnDA;AACAA,UAAAA,UAAU,CAAC5C,MAAX4C,GAAoB,KAAK7C,IAAL,CAAUC,MAA9B4C;AACApB,UAAAA,cAAc,GAAGoB,UAAU,CAACZ,sBAAXY,CAAkCnB,KAAlCmB,CAAjBpB;AACAA,UAAAA,cAAc,CAACE,MAAfF,GAAwB,SAAxBA;AACA,eAAKzC,kBAAL,CAAwB,KAAKA,kBAAL,CAAwBpB,MAAhD,IAA0D6D,cAA1D;AACA,eAAKvC,eAAL,GAAuBuC,cAAvB,CAtFI;;AAyFJZ,UAAAA,CAAC,IAAI,EAALA;;AACA,eAAK,IAAIO,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKzC,OAAL,CAAaf,MAAjC,EAAyCwD,GAAC,EAA1C,EAA8C;AAC1C,gBAAMU,QAAO,GAAGb,WAAW,CAAC,KAAK8B,mBAAN,CAA3B;;AACAjB,YAAAA,QAAO,CAACP,WAARO,CAAoBlB,CAApBkB,EAAuBjB,CAAC,GAAGF,MAAM,GAAGS,GAApCU,EAAuC,GAAvCA;;AACAA,YAAAA,QAAO,CAACN,QAARM,CAAiB,GAAjBA,EAAsB,GAAtBA,EAA2B,GAA3BA;;AACAA,YAAAA,QAAO,CAAC7B,MAAR6B,GAAiBhB,QAAjBgB;;AAEA,gBAAME,cAAa,GAAGF,QAAO,CAACG,sBAARH,CAA+BI,QAA/BJ,CAAtB;;AACAE,YAAAA,cAAa,CAACL,MAAdK,GAAuB,KAAKrD,OAAL,CAAayC,GAAb,CAAvBY;AACA,iBAAKjD,iBAAL,CAAuB,KAAKA,iBAAL,CAAuBnB,MAA9C,IAAwDoE,cAAxD;AACA,iBAAK/C,eAAL,CAAqB,KAAKA,eAAL,CAAqBrB,MAA1C,IAAoDoE,cAAa,CAACL,MAAlE;;AAEA,gBAAMqB,eAAe,GAAGlB,QAAO,CAAC5B,YAAR4B,CAAqBM,MAArBN,CAAxB;;AACAkB,YAAAA,eAAe,CAACC,SAAhBD,GAA4B5B,GAAC,GAAG,IAAH,GAAU,KAAvC4B;;AACAlB,YAAAA,QAAO,CAACK,EAARL,CAAWM,MAAM,CAACC,SAAPD,CAAiBE,MAA5BR,EAAoCV,GAAC,GAAG,KAAK8B,wBAAR,GAAmC,KAAKC,mBAA7ErB,EAAkG,IAAlGA;;AACA,iBAAKhD,kBAAL,CAAwBsC,GAAxB,IAA6BU,QAA7B;WAxGA;;;AA4GJjB,UAAAA,CAAC,IAAI,GAALA;;AACA,eAAK,IAAIO,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAK1C,YAAL,CAAkBd,MAAtC,EAA8CwD,GAAC,EAA/C,EAAmD;AAC/C,gBAAMU,SAAO,GAAGV,GAAC,GAAGH,WAAW,CAAC,KAAK8B,mBAAN,CAAd,GAA2C,KAAKA,mBAAjE;;AACAjB,YAAAA,SAAO,CAACP,WAARO,CAAoBlB,CAApBkB,EAAuBjB,CAAC,GAAGF,MAAM,GAAGS,GAApCU,EAAuC,GAAvCA;;AACAA,YAAAA,SAAO,CAACN,QAARM,CAAiB,GAAjBA,EAAsB,GAAtBA,EAA2B,GAA3BA;;AACAA,YAAAA,SAAO,CAAC7B,MAAR6B,GAAiB,KAAKiB,mBAAL,CAAyB9C,MAA1C6B;;AAEA,gBAAME,eAAa,GAAGF,SAAO,CAACG,sBAARH,CAA+BI,QAA/BJ,CAAtB;;AACAE,YAAAA,eAAa,CAACL,MAAdK,GAAuB,KAAKtD,YAAL,CAAkB0C,GAAlB,CAAvBY;AACA,iBAAKjD,iBAAL,CAAuB,KAAKA,iBAAL,CAAuBnB,MAA9C,IAAwDoE,eAAxD;AACA,iBAAK/C,eAAL,CAAqB,KAAKA,eAAL,CAAqBrB,MAA1C,IAAoDoE,eAAa,CAACL,MAAlE;;AAEAG,YAAAA,SAAO,CAACK,EAARL,CAAWM,MAAM,CAACC,SAAPD,CAAiBE,MAA5BR,EAAoC,KAAKsB,mBAAzCtB,EAA8D,IAA9DA;;AAEA,iBAAKlD,uBAAL,CAA6BwC,GAA7B,IAAkCU,SAAlC;;AAEP,SA+EAlC;;AA/EAA,QAAAA,MAAA,CAEDyD,aAFCzD,GAED,SAAAyD,aAAA,CAAcC,MAAd,EAAsBC,eAAtB,EAAiD;AAC7C,cAAIC,QAAQ,GAAG,IAAIC,MAAJ,CAAWH,MAAX,CAAf;AACA,cAAMI,SAAS,GAAGF,QAAQ,CAACG,MAATH,CAAgB,GAAhBA,CAAlB;;AACA,cAAIE,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAClB,mBAAOJ,MAAM,KAAKC,eAAlB;AACH,WAFD,MAEO;AACHC,YAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAATJ,CAAgBE,SAAS,GAAG,CAA5BF,CAAXA;AACAA,YAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAATJ,CAAgB,CAAhBA,EAAmBA,QAAQ,CAACG,MAATH,CAAgB,GAAhBA,CAAnBA,CAAXA;AACA,mBAAOA,QAAQ,KAAKD,eAApB;;AAEP,SAZA3D;;AAYAA,QAAAA,MAAA,CACD2C,gBADC3C,GACD,SAAA2C,gBAAA,CAAiBsB,MAAjB,EAAiC;AAC7B,cAAMC,SAAS,GAAGC,QAAQ,CAACC,IAATD,CAAeD,SAAjC;AACA,cAAM9B,aAAa,GAAG6B,MAAM,CAAC5B,sBAAP4B,CAA8B3B,QAA9B2B,CAAtB;;AACA,eAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3C,SAAL,CAAeb,MAAnC,EAA2CwD,CAAC,EAA5C,EAAgD;AAC5C,gBAAI,KAAKiC,aAAL,CAAmBrB,aAAa,CAACL,MAAjC,EAAyC,KAAKlD,SAAL,CAAe2C,CAAf,CAAzC,CAAJ,EAAiE;AAC7D0C,cAAAA,SAAS,CAACG,UAAVH,GAAuB1C,CAAvB0C;;;AAGX,SATAlE;;AASAA,QAAAA,MAAA,CACDwD,mBADCxD,GACD,SAAAwD,mBAAA,CAAoBS,MAApB,EAAoC;AAChC,cAAMC,SAAS,GAAGC,QAAQ,CAACC,IAATD,CAAeD,SAAjC;AACA,cAAM9B,aAAa,GAAG6B,MAAM,CAAC5B,sBAAP4B,CAA8B3B,QAA9B2B,CAAtB;;AACA,eAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1C,YAAL,CAAkBd,MAAtC,EAA8CwD,CAAC,EAA/C,EAAmD;AAC/C,gBAAI,KAAKiC,aAAL,CAAmBrB,aAAa,CAACL,MAAjC,EAAyC,KAAKjD,YAAL,CAAkB0C,CAAlB,CAAzC,CAAJ,EAAoE;AAChE0C,cAAAA,SAAS,CAACI,mBAAVJ,CAA8B1C,CAA9B0C,EAAiCD,MAAM,CAACZ,SAAxCa;;;AAGX,SATAlE;;AASAA,QAAAA,MAAA,CACDsD,wBADCtD,GACD,SAAAsD,wBAAA,CAAyBW,MAAzB,EAAyC;AACrC,cAAMC,SAAS,GAAGC,QAAQ,CAACC,IAATD,CAAeD,SAAjC;AACAA,UAAAA,SAAS,CAACK,kBAAVL,GAA+BD,MAAM,CAACZ,SAAtCa;AACH,SAJAlE;;AAIAA,QAAAA,MAAA,CACDuD,mBADCvD,GACD,SAAAuD,mBAAA,CAAoBU,MAApB,EAAoC;AAChC,cAAMC,SAAS,GAAGC,QAAQ,CAACC,IAATD,CAAeD,SAAjC;AACAA,UAAAA,SAAS,CAACM,kBAAVN,GAA+BD,MAAM,CAACZ,SAAtCa;AACH,SAJAlE;;AAIAA,QAAAA,MAAA,CACD8C,sBADC9C,GACD,SAAA8C,sBAAA,CAAuB2B,MAAvB,EAAuC;AACnC,cAAMP,SAAS,GAAGC,QAAQ,CAACC,IAATD,CAAeD,SAAjC;AACAA,UAAAA,SAAS,CAACpB,sBAAVoB,CAAiC,IAAjCA;;AACA,eAAK,IAAI1C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxC,uBAAL,CAA6BhB,MAAjD,EAAyDwD,CAAC,EAA1D,EAA8D;AAC1D,gBAAM4B,gBAAe,GAAG,KAAKpE,uBAAL,CAA6BwC,CAA7B,EAAgClB,YAAhC,CAA6CkC,MAA7C,CAAxB;;AACAY,YAAAA,gBAAe,CAACC,SAAhBD,GAA4B,IAA5BA;;;AAGJ,cAAIA,eAAe,GAAG,KAAKlE,kBAAL,CAAwB,CAAxB,EAA2BoB,YAA3B,CAAwCkC,MAAxC,CAAtB;AACAY,UAAAA,eAAe,CAACC,SAAhBD,GAA4B,KAA5BA;AACAc,UAAAA,SAAS,CAACM,kBAAVN,GAA+B,KAA/BA;AACAd,UAAAA,eAAe,GAAG,KAAKlE,kBAAL,CAAwB,CAAxB,EAA2BoB,YAA3B,CAAwCkC,MAAxC,CAAlBY;AACAA,UAAAA,eAAe,CAACC,SAAhBD,GAA4B,IAA5BA;AACAc,UAAAA,SAAS,CAACK,kBAAVL,GAA+B,IAA/BA;AACH,SAfAlE;;AAeAA,QAAAA,MAAA,CACDkD,MADClD,GACD,SAAAkD,MAAA,CAAOuB,MAAP,EAAuB;AACnB,cAAMlD,SAAS,GAAG,KAAKnB,IAAL,CAAUe,cAAV,CAAyB,QAAzB,CAAlB;AACA,cAAMuD,WAAW,GAAG,CAACnD,SAAS,CAACoD,MAA/B;AACA,eAAK1F,oBAAL,CAA0B,CAA1B,EAA6BoB,MAA7B,CAAoCsE,MAApC,GAA6CD,WAA7C;AACA,eAAKxF,kBAAL,CAAwB,CAAxB,EAA2BmB,MAA3B,CAAkCsE,MAAlC,GAA2CD,WAA3C;AACA,eAAK1F,uBAAL,CAA6B,CAA7B,EAAgCqB,MAAhC,CAAuCsE,MAAvC,GAAgDD,WAAhD;AACA,eAAKhD,4BAAL,CAAkCrB,MAAlC,CAAyCsE,MAAzC,GAAkDD,WAAlD;AACAnD,UAAAA,SAAS,CAACoD,MAAVpD,GAAmBmD,WAAnBnD;AACA,eAAKjC,eAAL,CAAqByC,MAArB,GAA8B2C,WAAW,GAAG,SAAH,GAAe,SAAxD;AACH,SAVA1E;;AAUAA,QAAAA,MAAA,CAiBDgD,eAjBChD,GAiBD,SAAAgD,eAAA,CAAgByB,MAAhB,EAAgC;AAC5B,eAAKlF,kBAAL;;AACA,cAAI,KAAKA,kBAAL,IAA2B,KAAKC,QAAL,CAAcxB,MAA7C,EAAqD;AACjD,iBAAKuB,kBAAL,GAA0B,CAA1B;;;AAEJ,eAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrC,iBAAL,CAAuBnB,MAA3C,EAAmDwD,CAAC,EAApD,EAAwD;AACpD,iBAAKrC,iBAAL,CAAuBqC,CAAvB,EAA0BO,MAA1B,GAAmC,KAAKvC,QAAL,CAAc,KAAKD,kBAAnB,IAAyC,KAAKF,eAAL,CAAqBmC,CAArB,CAAzC,GAAmE,UAAtG;;;AAEJ,eAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKpC,kBAAL,CAAwBpB,MAA5C,EAAoDwD,GAAC,EAArD,EAAyD;AACrD,iBAAKpC,kBAAL,CAAwBoC,GAAxB,EAA2B/B,KAA3B,GAAmC,KAAKA,KAAL,CAAW,KAAKF,kBAAhB,CAAnC;;AAEP,SA5BAS;;AA4BAA,QAAAA,MAAA,CAED4E,MAFC5E,GAED,SAAA4E,MAAA,GAAS,CACR,CAHA5E;;AAGAA,QAAAA,MAAA,CACD6E,MADC7E,GACD,SAAA6E,MAAA,CAAOC,SAAP,EAA0B,CACzB,CAFA9E;;AAEA,eAAA7C,uBAAA;QAxTwC4H,UAK1BrH,GALmCc,WAAA,GAAAwG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,uBAAA,GAAA5C,MAAA;AAAA4H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBAEf,IAFe;;OAAA,CAAA5G,EAEXE,YAAA,GAAAsG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,oBAAA,GAAA1C,MAAA;AAAA0H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBAEP,IAFO;;OAAA,CAFW5G,EAIdG,YAAA,GAAAqG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,gCAAA,GAAAzC,MAAA;AAAAyH,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBAEQ,IAFR;;OAAA,CACrB1H,GACiCA,OADjC,CAAA,CAAAN,IACiCK;;cAmTnD,CAAA4H,IAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC3TD,UAAQtI,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaqI,QAAQ,wBAAAnI,IAAA,GADpBJ,OAAO,CAAC,UAAD,CACaI,EADDC,KAAA,GAEfH,QAAQ,CAACI,IAAD,CADQF,EACFA,IAAA,CAAAK,MAAA,IAAAC,OAAA,0BAAAC;AAAAC,QAAAA,cAAA,CAAA2H,QAAA,EAAA5H,UAAA,CAAAC;;AAAA,iBAAA2H,QAAA;AAAA,cAAA1H,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAAF,UAAA,CAAAS,IAAAT,CAAAU,KAAAV,CAAAA,UAAAA,SAAAW,OAAAL,KAAAN,SAAAE;;AAAAU,UAAAA,0BAAA,CAAAV,KAAA,cAAA,EAAAW,WAAA,EAAAC,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAV,UAAAA,KAAA,CAEP2H,WAFO3H,GAEO,KAFPA;AAEYA,UAAAA,KAAA,CACnB4H,OADmB5H,GACT6H,EAAE,EADO7H;AACL,iBAAAA,KAAA;;;AAAA,YAAAmC,MAAA,GAAAuF,QAAA,CAAAtF,SAAA;;AAAAD,QAAAA,MAAA,CAEZ4E,MAFY5E,GAEtB,SAAA4E,MAAA,GAAmB;AACf,eAAKe,UAAL,CAAgBpD,EAAhB,CAAmBjF,IAAI,CAACmF,SAALnF,CAAesI,WAAlC,EAA+C,KAAKC,YAApD,EAAkE,IAAlE;AACA,eAAKF,UAAL,CAAgBpD,EAAhB,CAAmBjF,IAAI,CAACmF,SAALnF,CAAewI,UAAlC,EAA8C,KAAKC,WAAnD,EAAgE,IAAhE;AACA,eAAKJ,UAAL,CAAgBpD,EAAhB,CAAmBjF,IAAI,CAACmF,SAALnF,CAAe0I,SAAlC,EAA6C,KAAKC,UAAlD,EAA8D,IAA9D;AACA,eAAKN,UAAL,CAAgBpD,EAAhB,CAAmBjF,IAAI,CAACmF,SAALnF,CAAe4I,YAAlC,EAAgD,KAAKD,UAArD,EAAiE,IAAjE;AACH,SAPqBjG;;AAOrBA,QAAAA,MAAA,CAEO6F,YAFP7F,GAED,SAAA6F,YAAA,CAAqBM,KAArB,EAA4B;AACxB,eAAKX,WAAL,GAAmB,IAAnB;AACA,cAAMY,KAAK,GAAGD,KAAK,CAACC,KAApB;;AACA,eAAKX,OAAL,CAAaY,GAAb,CAAiBD,KAAK,CAACE,aAANF,GAAsBpF,CAAtBoF,GAA0B,KAAKT,UAAL,CAAgBY,QAAhB,CAAyBvF,CAApE,EAAuEoF,KAAK,CAACE,aAANF,GAAsBnF,CAAtBmF,GAA0B,KAAKT,UAAL,CAAgBY,QAAhB,CAAyBtF,CAA1H;AACH,SANAjB;;AAMAA,QAAAA,MAAA,CAEO+F,WAFP/F,GAED,SAAA+F,WAAA,CAAoBI,KAApB,EAA2B;AACvB,cAAI,CAAC,KAAKX,WAAV,EAAuB;AACvB,cAAMY,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,eAAKT,UAAL,CAAgBY,QAAhB,GAA2Bb,EAAE,CAACU,KAAK,CAACE,aAANF,GAAsBpF,CAAtBoF,GAA0B,KAAKX,OAAL,CAAazE,CAAxC,EAA2CoF,KAAK,CAACE,aAANF,GAAsBnF,CAAtBmF,GAA0B,KAAKX,OAAL,CAAaxE,CAAlF,CAA7B;AACH,SANAjB;;AAMAA,QAAAA,MAAA,CAEOiG,UAFPjG,GAED,SAAAiG,UAAA,GAAqB;AACjB,eAAKT,WAAL,GAAmB,KAAnB;AACH,SAJAxF;;AAIA,eAAAuF,QAAA;QA3ByBR,UACXrH,EADoBc,WAAA,GAAAwG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,cAAA,GAAA5C,MAAA;AAAA4H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACA,IADA;;OAAA,CACpB1H,EAAwBA,OAAxB,CAAA,CAAAN,IAAwBK;;cA2B1C,CAAA4H,IAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BD,UAAQtI,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGasJ,MAAM,sBAAApJ,IAAA,GADlBJ,OAAO,CAAC,QAAD,CACWI,EADDA,IAAA,CAAAK,MAAA,0BAAAE;AAAAC,QAAAA,cAAA,CAAA4I,MAAA,EAAA7I,UAAA,CAAAC;;AAAA,iBAAA4I,MAAA;AAAA,cAAA3I,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAAF,UAAA,CAAAS,IAAAT,CAAAU,KAAAV,CAAAA,UAAAA,SAAAW,OAAAL,KAAAN,SAAAE;AAAAA,UAAAA,KAAA,CAEN4I,MAFM5I,GAEgB,IAFhBA;AAEoBA,UAAAA,KAAA,CAC1B6I,MAD0B7I,GACT,GADSA;AACN,iBAAAA,KAAA;;;AAAA,YAAAmC,MAAA,GAAAwG,MAAA,CAAAvG,SAAA;;AAAAD,QAAAA,MAAA,CAElB2G,QAFkB3G,GAE5B,SAAA2G,QAAA,GAA2B;AACvB,eAAKC,YAAL,CAAkB,KAAKC,IAAvB,EAA6B,GAA7B;AACH,SAJ2B7G;;AAI3BA,QAAAA,MAAA,CAES8G,SAFT9G,GAED,SAAA8G,SAAA,GAA4B;AACxB,eAAKC,sBAAL;AACA,eAAKC,IAAL;AACA,cAAMC,KAAK,GAAG,KAAK7G,IAAL,CAAUE,YAAV,CAAuB4G,EAAE,CAACC,QAA1B,CAAd;;AACA,cAAIF,KAAJ,EAAW;AACPA,YAAAA,KAAK,CAACG,cAANH;;AAEP,SATAjH;;AASAA,QAAAA,MAAA,CAEO6G,IAFP7G,GAED,SAAA6G,IAAA,GAAe;AAAA,cAAAQ,MAAA,OAAA;;AACX,eAAKL,IAAL;AACA,cAAMM,cAAc,GAAG,IAAIC,IAAJ,CAASC,IAAI,CAACC,MAALD,KAAgB,IAAhBA,GAAuB,GAAhC,EAAqCA,IAAI,CAACC,MAALD,KAAgB,IAAhBA,GAAuB,GAA5D,EAAiE,CAAjE,CAAvB;;AACA,cAAME,QAAQ,GAAGH,IAAI,CAACI,QAALJ,CAAc,KAAKnH,IAAL,CAAUmG,QAAxBgB,EAAkCD,cAAlCC,IAAoD,KAAKb,MAA1E;;AACA,eAAKD,MAAL,GAAcmB,KAAK,CAAC,KAAKxH,IAAN,CAALwH,CAAiBC,EAAjBD,CAAoBF,QAApBE,EAA8B;AAAErB,YAAAA,QAAQ,EAAEe;AAAZ,WAA9BM,EAA4D;AACtEE,YAAAA,QAAQ,EAAE,SAAAA,QAAA,GAAM;;AAEZ,kBAAMC,SAAS,GAAGT,cAAc,CAACU,KAAfV,GAAuBW,QAAvBX,CAAgCD,MAAI,CAACjH,IAALiH,CAAUd,QAA1Ce,EAAoDY,SAApDZ,EAAlB;AACAD,cAAAA,MAAI,CAACjH,IAALiH,CAAUc,KAAVd,GAAkBG,IAAI,CAACY,KAALZ,CAAWO,SAAS,CAAC9G,CAArBuG,EAAwBO,SAAS,CAAC/G,CAAlCwG,IAAuC,GAAvCA,GAA6CA,IAAI,CAACa,EAApEhB;AACH,aALqE;AAMtEiB,YAAAA,UAAU,EAAE,SAAAA,UAAA,GAAM;AACdjB,cAAAA,MAAI,CAACR,IAALQ;;AAPkE,WAA5DO,EASX1H,KATW0H,EAAd;AAUH,SAhBA5H;;AAgBAA,QAAAA,MAAA,CAEOgH,IAFPhH,GAED,SAAAgH,IAAA,GAAe;AACX,cAAI,KAAKP,MAAT,EAAiB;AACb,iBAAKA,MAAL,CAAYO,IAAZ;;AACA,iBAAKP,MAAL,GAAc,IAAd;;AAEP,SAPAzG;;AAOA,eAAAwG,MAAA;QAtCuBzB,UADV,CAAA3H,IACmBK;;cAwCpC,CAAA4H,IAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CD,UAAQtI,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;AAEA,UAAMqL,SAAS,GAAG,CAAlB;AACA,UAAMC,SAAS,GAAG,CAAlB;UAGaC,SAAS,yBAAArL,IAAA,GADrBJ,OAAO,CAAC,WAAD,CACcI,EADDC,KAAA,GAEhBH,QAAQ,CAACI,IAAD,CADSF,EACHG,KAAA,GACdL,QAAQ,CAACwL,MAAD,CAFStL,EAEDI,KAAA,GAChBN,QAAQ,CAAC4E,KAAD,CAHS1E,EAGFA,IAAA,CAAAK,MAAA,IAAAC,OAAA,0BAAAC;AAAAC,QAAAA,cAAA,CAAA6K,SAAA,EAAA9K,UAAA,CAAAC;;AAAA,iBAAA6K,SAAA;AAAA,cAAA5K,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAAF,UAAA,CAAAS,IAAAT,CAAAU,KAAAV,CAAAA,UAAAA,SAAAW,OAAAL,KAAAN,SAAAE;;AAAAU,UAAAA,0BAAA,CAAAV,KAAA,UAAA,EAAAW,WAAA,EAAAC,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,UAAA,EAAAa,YAAA,EAAAD,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,SAAA,EAAAc,YAAA,EAAAF,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAA,iBAAAV,KAAA;;;AAAA,YAAAmC,MAAA,GAAAyI,SAAA,CAAAxI,SAAA;;AAAAD,QAAAA,MAAA,CAENE,KAFMF,GAEhB,SAAAE,KAAA,GAAwB;AACpB,eAAKyI,MAAL,CAAYC,QAAZ,GAAuB,GAAvB;AACH,SAJe5I;;AAIfA,QAAAA,MAAA,CAED6E,MAFC7E,GAED,SAAA6E,MAAA,CAAOC,SAAP,EAA0B;AACtB,cAAI+D,OAAO,CAAC,KAAKC,MAAN,CAAX,EAA0B;AACtB,gBAAMC,KAAK,GAAG,KAAKC,SAAL,EAAd;AACA,iBAAKpH,QAAL,CAAcmH,KAAd;AACA,iBAAKE,KAAL,CAAWlH,MAAX,GAAoBgH,KAAK,CAACG,OAANH,CAAc,CAAdA,CAApB;;AAEP,SARA/I;;AAQAA,QAAAA,MAAA,CAED4B,QAFC5B,GAED,SAAA4B,QAAA,CAASmH,KAAT,EAAwB;AACpB,eAAKD,MAAL,CAAYK,KAAZ,GAAoBzD,EAAE,CAACqD,KAAD,EAAQA,KAAR,CAAtB;AACH,SAJA/I;;AAIAA,QAAAA,MAAA,CAEDgJ,SAFChJ,GAED,SAAAgJ,SAAA,GAAoB;;AAEhB,cAAMD,KAAK,GAAG,KAAKJ,MAAL,CAAYC,QAAZ,IAAwBJ,SAAS,GAAGD,SAApC,IAAiDA,SAA/D;AACA,cAAMa,IAAI,GAAG,IAAb;AACA,iBAAO5B,IAAI,CAAC6B,KAAL7B,CAAWuB,KAAK,GAAGK,IAAnB5B,IAA2B4B,IAAlC;AACH,SAPApJ;;AAOA,eAAAyI,SAAA;QA1B0B1D,UAGXrH,GAHoBc,WAAA,GAAAwG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,UAAA,GAAA5C,MAAA;AAAA4H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACL,IADK;;OAAA,CAAA5G,EACDE,YAAA,GAAAsG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,UAAA,GAAA1C,MAAA;AAAA0H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACA,IADA;;OAAA,CADC5G,EAEGG,YAAA,GAAAqG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,SAAA,GAAAzC,MAAA;AAAAyH,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACP,IADO;;OAAA,CACvB1H,GAAoBA,OAApB,CAAA,CAAAN,IAAoBK;;cAwBvC,CAAA4H,IAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCD,UAAQtI,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGaoM,eAAe,+BAAAlM,IAAA,GAD3BJ,OAAO,CAAC,iBAAD,CACoBI,EADDC,KAAA,GAEtBH,QAAQ,CAACgK,EAAE,CAACC,QAAJ,CADe/J,EACFG,KAAA,GACrBL,QAAQ,CAACqM,MAAD,CAFenM,EAEPI,KAAA,GAChBN,QAAQ,CAACI,IAAD,CAHeF,EAGToM,KAAA,GACdtM,QAAQ,CAACsF,MAAD,CAJepF,EAIPqM,KAAA,GAEhBvM,QAAQ,CAACI,IAAD,CANeF,EAMTA,IAAA,CAAAK,MAAA,IAAAC,OAAA,0BAAAC;AAAAC,QAAAA,cAAA,CAAA0L,eAAA,EAAA3L,UAAA,CAAAC;;AAAA,iBAAA0L,eAAA;AAAA,cAAAzL,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAAF,UAAA,CAAAS,IAAAT,CAAAU,KAAAV,CAAAA,UAAAA,SAAAW,OAAAL,KAAAN,SAAAE;;AAAAU,UAAAA,0BAAA,CAAAV,KAAA,SAAA,EAAAW,WAAA,EAAAC,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,eAAA,EAAAa,YAAA,EAAAD,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,aAAA,EAAAc,YAAA,EAAAF,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,cAAA,EAAA6L,YAAA,EAAAjL,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,kBAAA,EAAA8L,YAAA,EAAAlL,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAA,iBAAAV,KAAA;;;AAAA,YAAAmC,MAAA,GAAAsJ,eAAA,CAAArJ,SAAA;;AAAAD,QAAAA,MAAA,CAEL4E,MAFK5E,GAEf,SAAA4E,MAAA,GAAyB;AAAA,cAAAyC,MAAA,OAAA;;AACrB,eAAKJ,KAAL,CAAW2C,gBAAX,CAA4B,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA5B;AACAC,UAAAA,MAAM,CAAC,IAAD,CAANA,GAAe,KAAK9C,KAApB8C;AAEAC,UAAAA,YAAY,CAACC,SAAbD,CAAuBE,OAAvBF,CAAgD,EAAhDA,EAAoD,UAACG,GAAD,EAAMC,MAAN,EAAoC;AACpF,gBAAID,GAAJ,EAAS;AACLE,cAAAA,IAAI,CAACF,GAAD,CAAJE;AACA;;;AAEJ,gBAAID,MAAM,CAACpM,MAAPoM,IAAiB,CAArB,EAAwB;AACpBC,cAAAA,IAAI,CAAC,qBAAD,CAAJA;AACA;;;AAEJD,YAAAA,MAAM,GAAGA,MAAM,CAACE,MAAPF,CAAc,UAACG,IAAD;AAAK,qBAAKA,IAAI,YAAYrD,EAAE,CAACsD,YAAxB;aAAnBJ,CAATA;;AACA/C,YAAAA,MAAI,CAACoD,gBAALpD,CAAsB+C,MAAtB/C;AACH,WAXD2C;AAYH,SAlBchK;;AAkBdA,QAAAA,MAAA,CAEDyK,gBAFCzK,GAED,SAAAyK,gBAAA,CAAiBC,OAAjB,EAA6C;AAAA,cAAAC,MAAA,OAAA;;AACzC,eAAKC,cAAL,CAAoBC,iBAApB;AACA,cAAIH,OAAO,CAAC1M,MAAR0M,IAAkB,CAAtB,EAAyB;;AAAO,cAAAI,KAAA,YAAAA,QACJ;AAAA,gBAAjBP,IAAI,GAAAQ,KAAA,CAAAhC,KAAa;AACxB,gBAAMiC,GAAG,GAAG3J,WAAW,CAACsJ,MAAI,CAACM,WAAN,CAAvB;AACAD,YAAAA,GAAG,CAAC3I,sBAAJ2I,CAA2BlJ,KAA3BkJ,EAAkCjJ,MAAlCiJ,GAA2CT,IAAI,CAACjJ,IAAhD0J;AACAA,YAAAA,GAAG,CAAC3K,MAAJ2K,GAAaL,MAAI,CAACC,cAAlBI;AACAA,YAAAA,GAAG,CAACzI,EAAJyI,CAAO1N,IAAI,CAACmF,SAALnF,CAAe0I,SAAtBgF,EAAiC,YAAM;AACnCL,cAAAA,MAAI,CAAC1D,KAAL0D,CAAWO,YAAXP,GAA0BJ,IAA1BI;;AACAA,cAAAA,MAAI,CAACQ,eAALR;AACH,aAHDK;AAIH,WAT+B;;AAChC,mBAAAI,SAAA,GAAAC,+BAAA,CAAmBX,OAAnB,GAA0BK,KAA1B,IAA0BA,KAAA,GAAAK,SAAA,IAAAE,IAA1B;AAA0BR,YAAAA,KAAA;;;AAU1B,eAAK7D,KAAL,CAAWiE,YAAX,GAA0BR,OAAO,CAAC,CAAD,CAAjC;AACA,eAAKS,eAAL;AACH,SAjBAnL;;AAiBAA,QAAAA,MAAA,CAEDmL,eAFCnL,GAED,SAAAmL,eAAA,GAAkB;AAAA,cAAAI,MAAA,OAAA;;AACd,eAAKC,SAAL,CAAeX,iBAAf;AACA,cAAMY,KAAK,GAAG,KAAKxE,KAAL,CAAWiE,YAAX,CAAwBQ,YAAxB,EAAd;;AAAqD,cAAAC,MAAA,YAAAA,OAAAC,MAC3B;AACtB,gBAAIA,IAAI,IAAI,QAAZ;AACA,gBAAMZ,GAAG,GAAG3J,WAAW,CAACkK,MAAI,CAACN,WAAN,CAAvB;AACAD,YAAAA,GAAG,CAAC3I,sBAAJ2I,CAA2BlJ,KAA3BkJ,EAAkCjJ,MAAlCiJ,GAA2CY,IAA3CZ;AACAA,YAAAA,GAAG,CAAC3K,MAAJ2K,GAAaO,MAAI,CAACC,SAAlBR;AACAA,YAAAA,GAAG,CAACzI,EAAJyI,CAAO1N,IAAI,CAACmF,SAALnF,CAAe0I,SAAtBgF,EAAiC,YAAM;AACnCO,cAAAA,MAAI,CAACtE,KAALsE,CAAWM,YAAXN,CAAwB,CAAxBA,EAA2BK,IAA3BL,EAAiCA,MAAI,CAACO,UAALP,CAAgBlI,SAAjDkI;;AACA,kBAAM7D,QAAQ,GAAG6D,MAAI,CAACQ,oBAALR,CAA0BA,MAAI,CAACtE,KAA/BsE,EAAsCK,IAAtCL,CAAjB;;AACA/K,cAAAA,OAAO,CAACwL,GAARxL,qBAA8BoL,2BAAsBlE,QAApDlH;AACH,aAJDwK;AAKH,WAXoD;;AACrD,eAAK,IAAMY,IAAX,IAAmBH,KAAnB;AAAwB,gBAAAQ,IAAA,GAAAN,MAAA,CAAAC,IAAA,CAAA;;AAAA,gBAAAK,IAAA,eAAA,EACE;;AAU7B,SAhBAjM;;AAgBAA,QAAAA,MAAA,CAED+L,oBAFC/L,GAED,SAAA+L,oBAAA,CAAqB9E,KAArB,EAAkC3F,IAAlC,EAAgD;AAC5C,cAAI4K,SAAS,GAAGjF,KAAK,CAACiE,YAANjE,CAAmBkF,cAAnBlF,CAAkCmF,UAAlCnF,CAA6CoF,IAA7CpF,CAAkD,UAACqF,CAAD;AAAE,mBAAKA,CAAC,CAAChL,IAAFgL,IAAUhL,IAAf;WAApD2F,CAAhB;;AACA,iBAAOiF,SAAS,CAACxE,QAAjB;AACH,SALA1H;;AAKAA,QAAAA,MAAA,CAED6J,YAFC7J,GAED,SAAA6J,YAAA,CAAa0C,UAAb,EAAyBpG,KAAzB,EAAgC;AAC5B3F,UAAAA,OAAO,CAACwL,GAARxL,CAAY,cAAZA,EAA4B2F,KAAK,CAACoE,IAANpE,CAAW7E,IAAvCd;AACH,SAJAR;;AAIAA,QAAAA,MAAA,CAEDgH,IAFChH,GAED,SAAAgH,IAAA,GAAO;AACH,eAAKC,KAAL,CAAWuF,WAAX;AACH,SAJAxM;;AAIA,eAAAsJ,eAAA;QAtEgCvE,UAMlBrH,GAN2Bc,WAAA,GAAAwG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,SAAA,GAAA5C,MAAA;AAAA4H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACE,IADF;;OAAA,CAAA5G,EACME,YAAA,GAAAsG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,eAAA,GAAA1C,MAAA;AAAA0H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACR,IADQ;;OAAA,CADN5G,EAEEG,YAAA,GAAAqG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,aAAA,GAAAzC,MAAA;AAAAyH,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACV,IADU;;OAAA,CAFF5G,EAGJkL,YAAA,GAAA1E,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,cAAA,GAAAuJ,MAAA;AAAAvE,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACC,IADD;;OAAA,CAHI5G,EAICmL,YAAA,GAAA3E,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,kBAAA,GAAAwJ,MAAA;AAAAxE,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBAEJ,IAFI;;OAAA,CAE5B1H,GAA4BA,OAA5B,CAAA,CAAAN,IAA4BK;;cAkE9C,CAAA4H,IAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3ED,UAAQtI,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAIauP,SAAS,yBAAArP,IAAA,GADrBJ,OAAO,CAAC,WAAD,CACcI,EADDC,KAAA,GAEhBH,QAAQ,CAACqM,MAAD,CADSnM,EACDG,KAAA,GAGhBL,QAAQ,CAAC4E,KAAD,CAJS1E,EAIFI,KAAA,GACfN,QAAQ,CAACwP,OAAD,CALStP,EAKAoM,KAAA,GACjBtM,QAAQ,CAACwP,OAAD,CANStP,EAMAqM,KAAA,GACjBvM,QAAQ,CAACwP,OAAD,CAPStP,EAOAA,IAAA,CAAAK,MAAA,IAAAC,OAAA,0BAAAC;AAAAC,QAAAA,cAAA,CAAA6O,SAAA,EAAA9O,UAAA,CAAAC;;AAAA,iBAAA6O,SAAA;AAAA,cAAA5O,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAAF,UAAA,CAAAS,IAAAT,CAAAU,KAAAV,CAAAA,UAAAA,SAAAW,OAAAL,KAAAN,SAAAE;;AAAAU,UAAAA,0BAAA,CAAAV,KAAA,UAAA,EAAAW,WAAA,EAAAC,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,YAAA,EAAAa,YAAA,EAAAD,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,WAAA,EAAAc,YAAA,EAAAF,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,yBAAA,EAAA6L,YAAA,EAAAjL,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAA,UAAAA,0BAAA,CAAAV,KAAA,cAAA,EAAA8L,YAAA,EAAAlL,sBAAA,CAAAZ,KAAA,CAAA,CAAAU;;AAAAV,UAAAA,KAAA,CAElB8O,IAFkB9O,GAED,IAAI+O,QAAJ,EAFC/O;AAEaA,UAAAA,KAAA,CAC/BgP,SAD+BhP,GACA,EADAA;AACEA,UAAAA,KAAA,CACjCiP,SADiCjP,GACJ,IADIA;AACAA,UAAAA,KAAA,CACjCkP,SADiClP,GACb,CADaA;AACZ,iBAAAA,KAAA;;;AAAA,YAAAmC,MAAA,GAAAyM,SAAA,CAAAxM,SAAA;;AAAAD,QAAAA,MAAA,CAUX4E,MAVW5E,GAUrB,SAAA4E,MAAA,GAAyB;AACrB,eAAKoI,OAAL,CAAaC,OAAb,GAAuB,KAAvB;AACA,eAAKC,qBAAL,CAA2BD,OAA3B,GAAqC,KAArC;AACA,eAAKE,UAAL,CAAgBF,OAAhB,GAA0B,KAA1B;AACA,eAAKG,aAAL;AACH,SAfoBpN;;AAepBA,QAAAA,MAAA,CAES6E,MAFT7E,GAED,SAAA6E,MAAA,CAAiBwI,EAAjB,EAAmC;AAC/B,eAAKN,SAAL,IAAkBM,EAAlB;;AACA,cAAI,KAAKN,SAAL,IAAkB,CAAtB,EAAyB;AACrB,iBAAKA,SAAL,GAAiB,CAAjB;AACA,iBAAKO,WAAL,CAAiBC,QAAQ,CAAC,KAAKL,qBAAL,CAA2BnL,MAA5B,CAAzB;;AAEP,SARA/B;;AAQAA,QAAAA,MAAA,CAGDoN,aAHCpN,GAGD,SAAAoN,aAAA,GAAgB;AAAA,cAAA/F,MAAA,OAAA;;AACZ,eAAKmG,QAAL,CAAczL,MAAd,uBAAyC0L,8BAAzC;AACAzD,UAAAA,YAAY,CAACC,SAAbD,CAAuBE,OAAvBF,CAAgD,EAAhDA,EAAoD,UAACG,GAAD,EAAMC,MAAN,EAAoC;AACpF,gBAAID,GAAJ,EAAS;AACLE,cAAAA,IAAI,CAACF,GAAD,CAAJE;AACA;;;AAEJ,gBAAID,MAAM,CAACpM,MAAPoM,IAAiB,CAArB,EAAwB;AACpBC,cAAAA,IAAI,CAAC,qBAAD,CAAJA;AACA;;;AAEJD,YAAAA,MAAM,GAAGA,MAAM,CAACE,MAAPF,CAAc,UAACG,IAAD;AAAK,qBAAKA,IAAI,YAAYrD,EAAE,CAACsD,YAAxB;aAAnBJ,CAATA;AACA/C,YAAAA,MAAI,CAACwF,SAALxF,GAAiB+C,MAAM,CAACE,MAAPF,CAAc,UAACG,IAAD;AAAK,qBAAKA,IAAI,CAACjJ,IAALiJ,CAAUmD,QAAVnD,CAAmB,MAAnBA,KAA8BA,IAAI,CAACjJ,IAALiJ,CAAUmD,QAAVnD,CAAmB,MAAnBA,CAAnC;aAAnBH,CAAjB/C;AACAA,YAAAA,MAAI,CAACyF,SAALzF,GAAiB+C,MAAM,CAACiC,IAAPjC,CAAY,UAACG,IAAD;AAAK,qBAAKA,IAAI,CAACjJ,IAALiJ,CAAUmD,QAAVnD,CAAmB,MAAnBA,CAAL;aAAjBH,CAAjB/C;AACAA,YAAAA,MAAI,CAAC2F,OAAL3F,CAAa4F,OAAb5F,GAAuB,IAAvBA;AACAA,YAAAA,MAAI,CAAC6F,qBAAL7F,CAA2B4F,OAA3B5F,GAAqC,IAArCA;AACAA,YAAAA,MAAI,CAAC8F,UAAL9F,CAAgB4F,OAAhB5F,GAA0B,IAA1BA;AACAA,YAAAA,MAAI,CAAC2F,OAAL3F,CAAatF,MAAbsF,GAAsB,KAAtBA;AACAA,YAAAA,MAAI,CAAC6F,qBAAL7F,CAA2BtF,MAA3BsF,GAAoC,IAApCA;AACAA,YAAAA,MAAI,CAAC8F,UAAL9F,CAAgBtF,MAAhBsF,GAAyB,MAAzBA;AACH,WAlBD2C;AAmBH,SAxBAhK;;AAwBAA,QAAAA,MAAA,CAED2N,GAFC3N,GAED,SAAA2N,GAAA,GAAM;AACF,cAAI,CAAC,KAAKd,SAAN,IAAmB,KAAKA,SAAL,CAAe7O,MAAf,IAAyB,CAAhD,EAAmD;AACnD,cAAM4P,KAAK,GAAGL,QAAQ,CAAC,KAAKP,OAAL,CAAajL,MAAd,CAAtB;AACA,eAAKuL,WAAL,CAAiBM,KAAjB;AACH,SANA5N;;AAMAA,QAAAA,MAAA,CAEDsN,WAFCtN,GAED,SAAAsN,WAAA,CAAYM,KAAZ,EAA2B;AACvB,eAAK,IAAIpM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoM,KAApB,EAA2BpM,CAAC,EAA5B,EAAgC;AAC5B,gBAAI,KAAKpB,IAAL,CAAUyN,QAAV,CAAmB7P,MAAnB,IAA6B,KAAK8P,aAAtC,EAAqD;AACrD,gBAAI1N,IAAI,GAAG,KAAKuM,IAAL,CAAUoB,GAAV,EAAX;;AACA,gBAAI,CAAC3N,IAAL,EAAW;AACPA,cAAAA,IAAI,GAAGiB,WAAW,CAAC,KAAK2M,MAAN,CAAlB5N;;;AAEJA,YAAAA,IAAI,CAACuE,MAALvE,GAAc,IAAdA;AACAA,YAAAA,IAAI,CAAC6N,SAAL7N,CAAe,KAAKA,IAApBA;AACAA,YAAAA,IAAI,CAACuB,WAALvB,CAAiBsF,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnBtF;AACA,gBAAM6G,KAAK,GAAG7G,IAAI,CAACE,YAALF,CAAkB8G,EAAE,CAACC,QAArB/G,CAAd;AACA6G,YAAAA,KAAK,CAACG,cAANH;AACAA,YAAAA,KAAK,CAACiE,YAANjE,GAAqB,KAAKiH,SAAL,EAArBjH;AACA,iBAAKkH,gBAAL,CAAsBlH,KAAtB;;;AAEJ,eAAKuG,QAAL,CAAczL,MAAd,uBAAyC0L,8BAAyB,KAAKrN,IAAL,CAAUyN,QAAV,CAAmB7P,MAArF;AACH,SAlBAgC;;AAkBAA,QAAAA,MAAA,CAEDoO,MAFCpO,GAED,SAAAoO,MAAA,GAAS;AACL,cAAIR,KAAK,GAAGL,QAAQ,CAAC,KAAKP,OAAL,CAAajL,MAAd,CAApB;;AACA,iBAAO6L,KAAK,GAAG,CAARA,IAAa,KAAKxN,IAAL,CAAUyN,QAAV,CAAmB7P,MAAnB,GAA4B,CAAhD,EAAmD;AAC/C,gBAAMoC,IAAI,GAAG,KAAKA,IAAL,CAAUyN,QAAV,CAAmB,CAAnB,CAAb;;AACA,gBAAIzN,IAAJ,EAAU;AACNA,cAAAA,IAAI,CAACuE,MAALvE,GAAc,KAAdA;AACA,mBAAKuM,IAAL,CAAU0B,GAAV,CAAcjO,IAAd;AACAwN,cAAAA,KAAK;;;;AAGb,eAAKJ,QAAL,CAAczL,MAAd,uBAAyC0L,8BAAyB,KAAKrN,IAAL,CAAUyN,QAAV,CAAmB7P,MAArF;AACH,SAbAgC;;AAaAA,QAAAA,MAAA,CAEDkO,SAFClO,GAED,SAAAkO,SAAA,GAAY;AACR,iBAAO,KAAKrB,SAAL,CAAe,KAAKzM,IAAL,CAAUyN,QAAV,CAAmB7P,MAAnB,GAA4B,KAAK6O,SAAL,CAAe7O,MAA1D,CAAP;AACH,SAJAgC;;AAIAA,QAAAA,MAAA,CAEDsO,YAFCtO,GAED,SAAAsO,YAAA,CAAarH,KAAb,EAAyB3F,IAAzB,EAAuC;AACnC,cAAI,CAAC2F,KAAD,IAAU,CAACA,KAAK,CAACiE,YAArB,EAAmC;AAC/B,mBAAO,KAAP;;;AAEJ,cAAIgB,SAAS,GAAGjF,KAAK,CAACiE,YAANjE,CAAmBkF,cAAnBlF,CAAkCmF,UAAlCnF,CAA6CoF,IAA7CpF,CAAkD,UAACqF,CAAD;AAAE,mBAAKA,CAAC,CAAChL,IAAFgL,KAAWhL,IAAhB;WAApD2F,CAAhB;;AACA,iBAAOiF,SAAS,IAAI,IAApB;AACH,SARAlM;;AAQAA,QAAAA,MAAA,CAEDmO,gBAFCnO,GAED,SAAAmO,gBAAA,CAAiBlH,KAAjB,EAA6B;AACzB,cAAMwE,KAAK,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,CAAd;;AACA,mBAAA8C,EAAA,MAAAC,MAAA,GAAmB/C,KAAnB,EAAwB8C,EAAA,GAAAC,MAAA,CAAAxQ,MAAxB,EAAwBuQ,EAAA,EAAxB,EAA0B;AAArB,gBAAM3C,IAAI,GAAA4C,MAAA,CAAAD,EAAA,CAAV;;AACD,gBAAI,KAAKD,YAAL,CAAkBrH,KAAlB,EAAyB2E,IAAzB,CAAJ,EAAoC;AAChC3E,cAAAA,KAAK,CAAC4E,YAAN5E,CAAmB,CAAnBA,EAAsB2E,IAAtB3E,EAA4B,IAA5BA;AACA;;;AAGX,SAVAjH;;AAUAyO,QAAAA,YAAA,CAAAhC,SAAA;AAAAiC,UAAAA,GAAA;AAAAX,UAAAA,GAAA,EAxGD,SAAAA,GAAA,GAAoB;AAChB,gBAAI;AACA,qBAAOR,QAAQ,CAAC,KAAKJ,UAAL,CAAgBpL,MAAjB,CAAf;AACH,aAFD,CAEE,OAAOtB,KAAP,EAAc;AACZ,qBAAO,IAAP;;;UAoGP,CAAAgO;;AAlGA,eAAAhC,SAAA;QApB0B1H,UAOTrH,GAPkBc,WAAA,GAAAwG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,UAAA,GAAA5C,MAAA;AAAA4H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBAEnB,IAFmB;;OAAA,CAAA5G,EAEfE,YAAA,GAAAsG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,YAAA,GAAA1C,MAAA;AAAA0H,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBAEc,IAFd;;OAAA,CAFe5G,EAIGG,YAAA,GAAAqG,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,WAAA,GAAAzC,MAAA;AAAAyH,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACD,IADC;;OAAA,CAJH5G,EAKMkL,YAAA,GAAA1E,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,yBAAA,GAAAuJ,MAAA;AAAAvE,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACU,IADV;;OAAA,CALN5G,EAMoBmL,YAAA,GAAA3E,yBAAA,CAAAtH,OAAA,CAAAuC,SAAA,cAAA,GAAAwJ,MAAA;AAAAxE,QAAAA,YAAA;AAAAC,QAAAA,UAAA;AAAAC,QAAAA,QAAA;AAAAC,QAAAA,WAAA,WAAAA;AAAA,iBACf,IADe;;OAAA,CACtC1H,GAA2BA,OAA3B,CAAA,CAAAN,IAA2BK;;cAgHhD,CAAA4H,IAAAC;;;;;;;;;;;;;;;;;;;;;;;AC1HD,UAAQtI,OAAO,GAAeC,UAAU,CAAhCD,OAAR;AAAA,UAAiBE,QAAQ,GAAKD,UAAU,CAAvBC,QAAjB;UAGayR,eAAe,+BAAAvR,IAAA,GAD3BJ,OAAO,CAAC,iBAAD,CACoBI,EADDA,IAAA,CAAAK,MAAA,0BAAAmR;AAAAhR,QAAAA,cAAA,CAAA+Q,eAAA,EAAAC,UAAA,CAAAhR;;AAAA,iBAAA+Q,eAAA;AAAA,cAAA9Q,KAAA;;AAAA,mBAAAC,IAAA,GAAAC,SAAA,CAAAC,QAAAC,IAAA,OAAAC,MAAAJ,OAAAK,IAAA,IAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA;AAAAF,YAAAA,IAAA,CAAAE,IAAA,CAAAF,GAAAF,SAAA,CAAAI,IAAA,CAAAF;;;AAAAJ,UAAAA,KAAA,GAAA+Q,UAAA,CAAAxQ,IAAAwQ,CAAAvQ,KAAAuQ,CAAAA,UAAAA,SAAAtQ,OAAAL,KAAA2Q,SAAA/Q;AAAAA,UAAAA,KAAA,CAGvBoJ,KAHuBpJ,GAGF,IAHEA;AAGE,iBAAAA,KAAA;;;AAAA,YAAAmC,MAAA,GAAA2O,eAAA,CAAA1O,SAAA;;AAAAD,QAAAA,MAAA,CAEzB4E,MAFyB5E,GAEzB,SAAA4E,MAAA,GAAS;AACL,eAAKqC,KAAL,GAAa,KAAK6B,MAAL,CAAYxI,YAAZ,CAAyB4G,EAAE,CAACC,QAA5B,CAAb;AACH,SAJwBnH;;AAIxBA,QAAAA,MAAA,CAED4B,QAFC5B,GAED,SAAA4B,QAAA,CAASmH,KAAT,EAAwB;AACpB,eAAK9B,KAAL,CAAW4H,SAAX,GAAuB9F,KAAvB;AACH,SAJA/I;;AAIA,eAAA2O,eAAA;QAVgClG,UADV,CAAArL,IACmBK;;cAY7C,CAAA4H,IAAAC","file":"all.js","sourcesContent":["import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { Component, _decorator, Node, v3, Button } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"DragNode\")\nexport class DragNode extends Component {\n    @property(Node) targetNode: Node = null;\n\n    private _isDragging = false;\n    private _offset = v3();\n\n    protected onLoad() {\n        this.targetNode.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.targetNode.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.targetNode.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.targetNode.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n    }\n\n    private onTouchStart(event) {\n        this._isDragging = true;\n        const touch = event.touch;\n        this._offset.set(touch.getUILocation().x - this.targetNode.position.x, touch.getUILocation().y - this.targetNode.position.y);\n    }\n\n    private onTouchMove(event) {\n        if (!this._isDragging) return;\n        const touch = event.touch;\n        this.targetNode.position = v3(touch.getUILocation().x - this._offset.x, touch.getUILocation().y - this._offset.y);\n    }\n\n    private onTouchEnd() {\n        this._isDragging = false;\n    }\n}","import { Component, Tween, Vec3, _decorator, tween, Node, sp } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Moving\")\nexport class Moving extends Component {\n    private _tween: Tween<Node> = null;\n    private _speed: number = 100;\n\n    protected onEnable(): void {\n        this.scheduleOnce(this.move, 0.1);\n    }\n\n    protected onDisable(): void {\n        this.unscheduleAllCallbacks();\n        this.stop();\n        const spine = this.node.getComponent(sp.Skeleton);\n        if (spine) {\n            spine.clearAnimation();\n        }\n    }\n\n    private move() {\n        this.stop();\n        const randomPosition = new Vec3(Math.random() * 1000 - 500, Math.random() * 1000 - 500, 0);\n        const duration = Vec3.distance(this.node.position, randomPosition) / this._speed;\n        this._tween = tween(this.node).to(duration, { position: randomPosition }, {\n            onUpdate: () => {\n                //update angle follow the direction\n                const direction = randomPosition.clone().subtract(this.node.position).normalize();\n                this.node.angle = Math.atan2(direction.y, direction.x) * 180 / Math.PI;\n            },\n            onComplete: () => {\n                this.move();\n            }\n        }).start();\n    }\n\n    private stop() {\n        if (this._tween) {\n            this._tween.stop();\n            this._tween = null;\n        }\n    }\n\n}","import { _decorator, Component, isValid, Label, Node, Slider, v3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst MIN_SCALE = 0;\nconst MAX_SCALE = 2;\n\n@ccclass('ScaleNode')\nexport class ScaleNode extends Component {\n    @property(Node) target: Node = null;\n    @property(Slider) slider: Slider = null;\n    @property(Label) label: Label = null;\n\n    protected start(): void {\n        this.slider.progress = 0.5;\n    }\n\n    update(deltaTime: number) {\n        if (isValid(this.target)) {\n            const value = this.snapValue();\n            this.setScale(value);\n            this.label.string = value.toFixed(2);\n        }\n    }\n\n    setScale(value: number) {\n        this.target.scale = v3(value, value);\n    }\n\n    snapValue(): number {\n        // snap progress value\n        const value = this.slider.progress * (MAX_SCALE - MIN_SCALE) + MIN_SCALE;\n        const snap = 0.01;\n        return Math.round(value / snap) * snap;\n    }\n}\n\n","import { _decorator, assetManager, Component, instantiate, Label, Node, Prefab, sp, Toggle, warn } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SpineController')\nexport class SpineController extends Component {\n    @property(sp.Skeleton) spine: sp.Skeleton = null;\n    @property(Prefab) btnPlayAnim: Prefab = null;\n    @property(Node) container: Node = null;\n    @property(Toggle) toggleLoop: Toggle = null;\n\n    @property(Node) containerSpine: Node = null;\n\n    protected onLoad(): void {\n        this.spine.setEventListener(this.onSpineEvent.bind(this));\n        window['sp'] = this.spine;\n\n        assetManager.resources.loadDir<sp.SkeletonData>('', (err, assets: sp.SkeletonData[]) => {\n            if (err) {\n                warn(err);\n                return;\n            }\n            if (assets.length == 0) {\n                warn('No spine data found');\n                return;\n            }\n            assets = assets.filter((data) => data instanceof sp.SkeletonData);\n            this.createListSpines(assets);\n        });\n    }\n\n    createListSpines(skeData: sp.SkeletonData[]) {\n        this.containerSpine.removeAllChildren();\n        if (skeData.length == 0) return;\n        for (const data of skeData) {\n            const btn = instantiate(this.btnPlayAnim);\n            btn.getComponentInChildren(Label).string = data.name;\n            btn.parent = this.containerSpine;\n            btn.on(Node.EventType.TOUCH_END, () => {\n                this.spine.skeletonData = data;\n                this.createListAnims();\n            });\n        }\n\n        this.spine.skeletonData = skeData[0];\n        this.createListAnims();\n    }\n\n    createListAnims() {\n        this.container.removeAllChildren();\n        const anims = this.spine.skeletonData.getAnimsEnum();\n        for (const anim in anims) {\n            if (anim == '<None>') continue;\n            const btn = instantiate(this.btnPlayAnim);\n            btn.getComponentInChildren(Label).string = anim;\n            btn.parent = this.container;\n            btn.on(Node.EventType.TOUCH_END, () => {\n                this.spine.setAnimation(0, anim, this.toggleLoop.isChecked);\n                const duration = this.getAnimationDuration(this.spine, anim);\n                console.log(`Play animation ${anim} with duration ${duration}`);\n            });\n        }\n    }\n\n    getAnimationDuration(spine: any , name: string) {\n        let animation = spine.skeletonData._skeletonCache.animations.find((e) => e.name == name);\n        return animation.duration;\n    }\n\n    onSpineEvent(trackEntry, event) {\n        console.log('onSpineEvent', event.data.name);\n    }\n\n    stop() {\n        this.spine.clearTracks();\n    }\n\n}\n\n","import { _decorator, assetManager, Component, EditBox, instantiate, Label, Node, NodePool, Prefab, sp, VERSION, UITransform, Vec3, view, warn, v3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('SpineTest')\nexport class SpineTest extends Component {\n    @property(Prefab)\n    prefab: Prefab = null;\n\n    @property(Label) lblCount: Label = null;\n    @property(EditBox) editBox: EditBox = null;\n    @property(EditBox) editBoxIncreaseByTime: EditBox = null;\n    @property(EditBox) editBoxMax: EditBox = null;\n\n    pool: NodePool = new NodePool();\n    listSpine: sp.SkeletonData[] = [];\n    spineBoss: sp.SkeletonData = null;\n    delayTime: number = 0;\n\n    get MaxSpineCount() {\n        try {\n            return parseInt(this.editBoxMax.string);\n        } catch (error) {\n            return 2000;\n        }\n    }\n\n    protected onLoad(): void {\n        this.editBox.enabled = false;\n        this.editBoxIncreaseByTime.enabled = false;\n        this.editBoxMax.enabled = false;\n        this.loadListSpine();\n    }\n\n    protected update(dt: number): void {\n        this.delayTime += dt;\n        if (this.delayTime >= 1) {\n            this.delayTime = 0;\n            this.addByNumber(parseInt(this.editBoxIncreaseByTime.string));\n        }\n    }\n\n\n    loadListSpine() {\n        this.lblCount.string = `Cocos Version: ${VERSION}\\nLoading Spine...`;\n        assetManager.resources.loadDir<sp.SkeletonData>('', (err, assets: sp.SkeletonData[]) => {\n            if (err) {\n                warn(err);\n                return;\n            }\n            if (assets.length == 0) {\n                warn('No spine data found');\n                return;\n            }\n            assets = assets.filter((data) => data instanceof sp.SkeletonData);\n            this.listSpine = assets.filter((data) => data.name.includes('fish') || data.name.includes('boss'));\n            this.spineBoss = assets.find((data) => data.name.includes('boss'));\n            this.editBox.enabled = true;\n            this.editBoxIncreaseByTime.enabled = true;\n            this.editBoxMax.enabled = true;\n            this.editBox.string = '100';\n            this.editBoxIncreaseByTime.string = '20';\n            this.editBoxMax.string = '2000';\n        });\n    }\n\n    add() {\n        if (!this.listSpine || this.listSpine.length == 0) return;\n        const count = parseInt(this.editBox.string);\n        this.addByNumber(count);\n    }\n\n    addByNumber(count: number) {\n        for (let i = 0; i < count; i++) {\n            if (this.node.children.length >= this.MaxSpineCount) break;\n            let node = this.pool.get();\n            if (!node) {\n                node = instantiate(this.prefab);\n            }\n            node.active = true;\n            node.setParent(this.node);\n            node.setPosition(v3(0, 0, 0));\n            const spine = node.getComponent(sp.Skeleton);\n            spine.clearAnimation();\n            spine.skeletonData = this.spineData();\n            this.tryPlayAnimation(spine);\n        }\n        this.lblCount.string = `Cocos Version: ${VERSION}\\nSpine Count: ${this.node.children.length}`;\n    }\n\n    remove() {\n        let count = parseInt(this.editBox.string);\n        while (count > 0 && this.node.children.length > 0) {\n            const node = this.node.children[0];\n            if (node) {\n                node.active = false;\n                this.pool.put(node);\n                count--;\n            }\n        }\n        this.lblCount.string = `Cocos Version: ${VERSION}\\nSpine Count: ${this.node.children.length}`;\n    }\n\n    spineData() {\n        return this.listSpine[this.node.children.length % this.listSpine.length];\n    }\n\n    hasAnimation(spine: any, name: string) {\n        if (!spine || !spine.skeletonData) {\n            return false;\n        }\n        let animation = spine.skeletonData._skeletonCache.animations.find((e) => e.name === name);\n        return animation != null;\n    }\n\n    tryPlayAnimation(spine: any) {\n        const anims = ['Walk', 'idle', 'animation'];\n        for (const anim of anims) {\n            if (this.hasAnimation(spine, anim)) {\n                spine.setAnimation(0, anim, true);\n                break;\n            }\n        }\n    }\n}","import { _decorator, Component, Node, sp } from 'cc';\nimport { ScaleNode } from './ScaleNode';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TimeScaleSlider')\nexport class TimeScaleSlider extends ScaleNode {\n\n    spine: sp.Skeleton = null;\n\n    onLoad() {\n        this.spine = this.target.getComponent(sp.Skeleton);\n    }\n\n    setScale(value: number) {\n        this.spine.timeScale = value;\n    }\n\n}\n\n"]}